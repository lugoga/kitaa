{
  "hash": "6a56749573e586e0538d1c71e33a2876",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Create lineplots using ggplot2 to visualize changes in global life expectancy\"\ndescription: \"using ggplot2, a popular data visualization package in R, to create line plots that visualize changes in global life expectancy over time.\"\nauthor: \n  - name: Masumbuko Semba\n    url: https://semba.netlify.app\n    orcid: 0000-0002-5002-9747\n    affiliation: Nelson Mandela African Institution of Science and Technology\n    affiliation-url: https://semba.netlify.app/  \ncitation: \n    url: https://lugoga.github.io/kitaa/posts/visualize_line2/\nbibliography: ../blog.bib\ncsl:  ../elsevier.csl\ndate: \"2024-06-02\"\ntoc: true\ntoc-depth: 4\ncategories: [Data Science, Data Visualization, ggplot]\nimage: lineplot.png\ncode-fold: false\nexecute: \n  warning: false\n  message: false\n  comment: \"\"\nfilters: \n  - webr\n---\n\n\n\n\n<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-8KY4TDP558\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-8KY4TDP558');\n</script>\n\n\n\n\n## Introduction\n\nThis post provides a step-by-step guide to visualizing changes in global life expectancy using the data from the World Bank group through its package wbstats and the ggplot2 library in R. The post demonstrates various techniques for creating an informative and visually appealing line plot, including arranging the order of faceted panels, creating efficient visualizations of summary statistics, displaying graphic elements that extend beyond the plot boundary, making unique annotations in selected faceted panels, and loading custom fonts.\n\n\n\n## Packages and data cleaup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tidyverse)\nrequire(magrittr)\nrequire(wbstats)\n\n\ntheme_set(theme_minimal(base_size = 15)) # global theme\n```\n:::\n\n\n\n## Getting data from the World Bank\n\nIt is very simple to use `wbstats` if you know the names of the indicators from the World Development Indicators database. Today we download the 3 indicators used in gapminder: life expectancy, GDP per capita, and the total population. We also get the database of countries that we can look at.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_indicators <- c(\n  life_expectancy = \"SP.DYN.LE00.IN\", \n  gdp_capita =\"NY.GDP.PCAP.CD\", \n  pop = \"SP.POP.TOTL\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n data = wb(\n   country = \"all\",\n   indicator = my_indicators, \n   startdate = 1880, \n   enddate = 2023,  \n   return_wide = TRUE\n   ) |> \n  rename(life_expectancy = 6, gdp_capita = 5, pop = 7)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> FSA::headtail()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      iso3c date iso2c  country gdp_capita life_expectancy      pop\n1       ABW 1960    AW    Aruba         NA          64.152    54608\n2       ABW 1961    AW    Aruba         NA          64.537    55811\n3       ABW 1962    AW    Aruba         NA          64.752    56682\n16663   ZWE 2020    ZW Zimbabwe   1372.697          61.124 15669666\n16664   ZWE 2021    ZW Zimbabwe   1773.920          59.253 15993524\n16665   ZWE 2022    ZW Zimbabwe   1676.821          59.391 16320537\n```\n\n\n:::\n:::\n\n\nThe current dataset consists of individual countries around the world, lacking information about their respective continents. In order to link each country with its corresponding continent, we require an additional file containing a mapping of countries to continents. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries_continents = read_csv(\"../data/countries_continents.csv\") |> \n  janitor::clean_names() |> \n  mutate(continent = str_replace(continent, \"Middle East & North Africa\", \"MENA\"))\n```\n:::\n\n\nBy combining this supplementary file with our original dataset using country names as the main identifier, we can enhance our data with continental details. This process is essential for conducting continent-level analysis and developing visual representations that offer a more comprehensive geographical perspective.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlf.data = data |> \n  left_join(countries_continents) |> \n  filter(!is.na(continent)) |> \n  select(year = date, country, continent, gdp_capita:pop) |> \n  mutate(year = as.integer(year))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_classic(base_size = 12))\n\nf1 = lf.data |> \n  ggplot(aes(x = year, y = life_expectancy, \n             color = continent, fill = continent )) +\n  geom_line(aes(group = country), alpha = .2)+\n  stat_summary(fun = mean, geom = \"line\", size = 2)+\n  scale_x_continuous(breaks = seq(1960,2020,20))+\n  scale_y_continuous(limits = c(30, 85))\n\nf1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nf2 = f1+\n  facet_wrap(~continent, nrow = 1)+\n  ggsci::scale_color_aaas()+\n  ggsci::scale_fill_aaas() +\n  theme(legend.position = \"none\")\n\nf2 \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nf3 = f2 +\n  # year 1960\n  geom_vline(xintercept = 1960, linetype = \"dashed\", color = \"orange3\") +\n  # year 2020\n  geom_vline(xintercept = 2020, linetype = \"dashed\", color = \"skyblue3\") +\n  # add text annotation\n  # year 1952\n  annotate(geom = \"text\", x = 1960, y = 30, label = \" 1960\", \n           fontface = \"bold\", size = 2.8, hjust = 0, color = \"orange3\") +\n  # year 2007\n  annotate(geom = \"text\", x = 2020, y = 30, label = \"2020 \", \n           fontface = \"bold\", size = 2.8, hjust = 1, color = \"skyblue3\") \n\nf3\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlife.1960_2020 <- lf.data %>% \n  filter(year %in% c(1960, 2020)) %>% \n  group_by(continent, year) %>% \n  summarise(life_expectancy = mean(life_expectancy, na.rm = T) %>% round())\n\n\nlife.1960_2020 |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 Ã— 3\n# Groups:   continent [3]\n  continent  year life_expectancy\n  <chr>     <int>           <dbl>\n1 Africa     1960              43\n2 Africa     2020              64\n3 Americas   1960              59\n4 Americas   2020              74\n5 Asia       1960              51\n6 Asia       2020              74\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npanel.titles <- lf.data |> distinct(continent) |> arrange(continent) \n\n\nf3 + \n  # not clip graphical elements beyond the panel range\n  coord_cartesian(clip = \"off\") + \n  geom_text(\n    data = panel.titles,\n    aes(x = 1980, y = 85, label = continent),\n    size = 4.5, nudge_x = 10, fontface = \"bold\") +\n  # titles\n  labs(\n    # title = \"Steady increase of Human Life Expectancy\", \n    caption = \"Each line represents one country; central line: the average; \\nribbon, one standard deviation around the mean.\",\n    x = NULL)  +\n  theme(\n    strip.text = element_blank(), \n    \n    axis.line.y = element_blank(),\n    axis.line.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.length.y = unit(5, \"pt\"),\n    axis.ticks.y = element_line(linetype = \"solid\", linewidth = .15),\n    \n    plot.title = element_text(size = 18, family = \"fat\"),\n    plot.caption = element_text(hjust = 0, size = 10, color = \"grey50\"),\n    plot.background = element_rect(fill = \"#d8cfd0\"),\n    panel.background = element_rect(fill = \"#f2f1ef\")\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Conclusion\n\nThis post describes the process of creating an annotated line plot in R using the ggplot2 library to visualize the changing capture fish landings, with a focus on the Kenya, Uganda and Tanzania.\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}