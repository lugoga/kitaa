{
  "hash": "99999ef19b0c7dae03410e8d6f23d01e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Basic plots with ggplot2\"\nauthor: \n  - name: Masumbuko Semba\n    url: https://semba.netlify.app\n    orcid: 0000-0002-5002-9747\n    affiliation: Nelson Mandela African Institution of Science and Technology\n    affiliation-url: https://semba.netlify.app/  \nbibliography: ../blog.bib\ndate: \"2024-04-01\"\ncategories: [visualization, code, analysis]\n# image: \"../screenshots/Rproject.png\"\nexecute: \n  warning: false\n  message: false\n  comment: \"\"\nnumber-sections: true  \n---\n\n::: {.cell}\n\n:::\n\n\n\n## Introduction\n\nThe **ggplot2** package provides a set of functions that mirror the *Grammar of Graphics* [@ggplot], enabling you to efficaciously specify what you want a plot to look like. To have a glimpse of **ggplot2**, we start with five basic types of plots that are familiar to most people. These include: scatterplot, linegraphs, boxplots, histograms, and barplots. The first four graphs works with *quantitative* data and barplots are appropriate for *categorical* data. \n\nThus, understanding the type of data is inevitable before you throw the variable into **ggplot2** to make plot for you.  In this post, we will cover the most common plot types, such as line plots, histograms, pie charts, scatter plots, and bar plots, along with several other plot types that build upon these. \n \n \n### Scatterplot\n\nScatterplots are also called bivariate, allows you to visualize the association between two numerical variables. They are among the widely used plot in fisheries science particularly when looking for association between length and weight of a particular fish. Probably you might have come across a scatterplot like the one in @fig-scatter-chinook that base R was used, but probably you have not made one based on the fundamental theorem of *grammar of graphics*. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Length and weight relationship of Chinook Salmon sampled in Atantic Ocean](index_files/figure-html/fig-scatter-chinook-1.png){#fig-scatter-chinook fig-pos='H' width=336}\n:::\n:::\n\n\n\nWe are going to visualize the relationship between length and weight of fish measured in the coastal waters of Kenya. We use the `tidy_LFQ_sample_4.csv` file.  Let's import the dataset in the session using `read_csv` function. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlfq4 = read_csv(\"../data/tidy/tidy_LFQ_sample_4.csv\")\n```\n:::\n\n\nThis file contain length and weight measurements along with sex sampled in Mombasa and Voi from March 2016 to September 2020 (@tbl-lfq).\n\n\n::: {#tbl-lfq .cell tbl-cap='Sample length and weight of sampled fish'}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-05f3032c{}.cl-05ebadc0{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-05ee684e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-05ee6858{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-05ee7aaa{width:0.956in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ab4{width:1.067in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ab5{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ab6{width:0.735in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7abe{width:0.523in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7abf{width:0.956in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ac8{width:1.067in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ac9{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ad2{width:0.735in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ad3{width:0.523in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ad4{width:0.956in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ad5{width:1.067in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ad6{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7adc{width:0.735in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7add{width:0.523in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ae6{width:0.956in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ae7{width:1.067in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7ae8{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7af0{width:0.735in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-05ee7af1{width:0.523in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-05f3032c'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-05ee7aaa\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">site</span></p></th><th class=\"cl-05ee7ab4\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">date</span></p></th><th class=\"cl-05ee7ab5\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">tl_mm</span></p></th><th class=\"cl-05ee7ab5\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">fl_mm</span></p></th><th class=\"cl-05ee7ab6\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">wt_gm</span></p></th><th class=\"cl-05ee7abe\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">sex</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7abf\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Mombasa</span></p></td><td class=\"cl-05ee7ac8\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2019-04-05</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">184</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">169</span></p></td><td class=\"cl-05ee7ad2\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">59.50</span></p></td><td class=\"cl-05ee7ad3\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">M</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7abf\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Mombasa</span></p></td><td class=\"cl-05ee7ac8\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2019-04-05</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">185</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">169</span></p></td><td class=\"cl-05ee7ad2\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">54.71</span></p></td><td class=\"cl-05ee7ad3\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">M</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7ad4\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Mombasa</span></p></td><td class=\"cl-05ee7ad5\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2019-04-05</span></p></td><td class=\"cl-05ee7ad6\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">145</span></p></td><td class=\"cl-05ee7ad6\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">134</span></p></td><td class=\"cl-05ee7adc\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">24.15</span></p></td><td class=\"cl-05ee7add\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">M</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7abf\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Voi</span></p></td><td class=\"cl-05ee7ac8\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2020-09-11</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">189</span></p></td><td class=\"cl-05ee7ac9\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">174</span></p></td><td class=\"cl-05ee7ad2\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">65.88</span></p></td><td class=\"cl-05ee7ad3\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">F</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7ad4\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Voi</span></p></td><td class=\"cl-05ee7ad5\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2020-09-11</span></p></td><td class=\"cl-05ee7ad6\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">162</span></p></td><td class=\"cl-05ee7ad6\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">147</span></p></td><td class=\"cl-05ee7adc\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">36.35</span></p></td><td class=\"cl-05ee7add\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">F</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-05ee7ae6\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">Voi</span></p></td><td class=\"cl-05ee7ae7\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">2020-09-11</span></p></td><td class=\"cl-05ee7ae8\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">168</span></p></td><td class=\"cl-05ee7ae8\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">153</span></p></td><td class=\"cl-05ee7af0\"><p class=\"cl-05ee6858\"><span class=\"cl-05ebadc0\">46.13</span></p></td><td class=\"cl-05ee7af1\"><p class=\"cl-05ee684e\"><span class=\"cl-05ebadc0\">F</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nLet's now dive into the code of using the *grammar of graphics**  to create the scatterplot. We use the `ggplot()` function from **ggplot2** package. The code highlighted in the chunk below was used to plot @fig-scatter1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")\n```\n\n::: {.cell-output-display}\n![Length and weight relationship](index_files/figure-html/fig-scatter1-1.png){#fig-scatter1 fig-pos='H' width=288}\n:::\n:::\n\n\nLet's explore the code above piece-by-piece\n\n+ The plotting in **ggplot2** begin with `ggplot()` function, where the two components of *grammar of graphics* are required. in the `data` component we specified the dataset  by setting `data = lfq4`. Then the second argument `aes`thetic that map the plot with coordinate was set by `aes(x = tl_mm, y = wt_gm))`. In a nutshell, the `aes()` define the variable -- axis specifications. \n+ We then added a layer to the `ggplot()` function call using the `+` sign. The added layer specify the third part of the *grammar---the `geom`etric component. Because we want to plot scatterplot, the appropriate `geom` for this case is the `geom_point()`. \n+ added a layer `labs` that allows us to label axis with meaningful axis titles\n\n**adding regression line**\nyou can simply add the regression line by adding a `geom_smooth()` layer. However,  @fig-scatter1 is non-linear and hence we need to specify the modal that fits the data, the `loess` model is mostly used for non-linear data. Therefore, we parse the argument`method = \"loess\"` to draw a non-linear regression line but also parse an argument `se = FALSE` to prevent plotting confidence error.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  geom_smooth(method = \"loess\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")\n```\n\n::: {.cell-output-display}\n![Length and weight relationship with non-linear regression line](index_files/figure-html/fig-scatter2-1.png){#fig-scatter2 fig-pos='H' width=288}\n:::\n:::\n\n\nIf we want to add a linear regression line i the scatter plot instead of the non linear shown in @ig-scatter2, we simply replace `method = \"loess\"` with `method = \"lm\"`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")\n```\n\n::: {.cell-output-display}\n![Length and weight relationship with linear regression line](index_files/figure-html/fig-scatter3-1.png){#fig-scatter3 fig-pos='H' width=288}\n:::\n:::\n\n\nThe linear regression line we added in @fig-scatter3 does not fit the data points. That's is nature of the length and weight measurements of most fishes as their growth is allometric and not isometric. To make use of the linear model in such data points, we often log-transform the data points first and replot. But in **ggplot** framework, you do need to do that but simply add the `scale_x_log10` and `scale_y_log10` layer\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")+\n  scale_x_log10() +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![Log-transformed length and weight relationship with linear regression line](index_files/figure-html/fig-scatter4-1.png){#fig-scatter4 fig-pos='H' width=288}\n:::\n:::\n\n\nKnowing whether the relationship is positive or negative and whether is linear or non linear is one thing, but people would like to know the strength of the relationship that you have simply presented in @fig-scatter4. Luckily, Pedro Aphalo developed a **ggpmisc** package [@ggpmisc], which extend the statistical function of **ggplot2**. By simply adding a layer `ggpmisc::stat_correlation()` in @fig-scatter4, the function generates labels for correlation coefficients and p-value, coefficient of determination (R^2) for method \"pearson\" and number of observations and add them into the plot (@fig-scatter0).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")+\n  scale_x_log10() +\n  scale_y_log10()+\n  ggpmisc::stat_correlation()\n```\n\n::: {.cell-output-display}\n![Log-transformed length and weight relationship with linear regression line with correlation coefficient](index_files/figure-html/fig-scatter0-1.png){#fig-scatter0 fig-pos='H' width=288}\n:::\n:::\n\n\n\nWe might be interested to distinguish the data points and the regression line based on the site. We can do that by adding the color argument in the aesthetic, which change from `aes(x = tl_mm, y = wt_gm)` to `aes(x = tl_mm, y = wt_gm, color = site)`. The argument ` color = site` will force the data points and the regression line to adhere to colors based on the site but the points and line are plotted on the same plot. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm, color = site))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")+\n  scale_x_log10() +\n  scale_y_log10()+\n  ggpmisc::stat_correlation()\n```\n\n::: {.cell-output-display}\n![Log-transformed length and weight relationship with linear regression line by site](index_files/figure-html/fig-scatter41-1.png){#fig-scatter41 fig-pos='H' width=384}\n:::\n:::\n\nLooking on @fig-scatter41, it is clear that sample from Mombasa station has relatively bigger and heavier fish than those sampled from Voi. But the problem with @fig-scatter41 is that most of the Mombasa data points are masked by Voi data points, which are overlaid on Mombasa data points. We can overcome the issue of point cluttering by simply adding a transparency level in point with `alpha = .2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm, color = site))+\n  geom_point(alpha = .2)+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")+\n  ggpmisc::stat_correlation()+\n  scale_x_log10() +\n  scale_y_log10()+\n  ggpmisc::stat_correlation()\n```\n\n::: {.cell-output-display}\n![Log-transformed length and weight relationship with linear regression line by site. Points density is highlighted with transparency](index_files/figure-html/fig-scatter5-1.png){#fig-scatter5 fig-pos='H' width=384}\n:::\n:::\n\n\nSometimes you may wish to plot @fig-scatter5 as separate plot shown in @fig-scatter6. That's is achieved with `facet_wrap` function, which facet plots based on the levels that are in the variable that is specified. For instance, in our case, the variable chosen is site and there are two sites--Voi and Mombasa. Therefore by simply adding a `facet_wrap(~site)` layer will force ggplot to make two plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4, aes(x = tl_mm, y = wt_gm))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE)+\n  labs(x = \"Total length (mm)\", y = \"Weight (gm)\")+\n  scale_x_log10() +\n  scale_y_log10()+\n  ggpmisc::stat_correlation()+\n  facet_wrap(~site, nrow = 1)\n```\n\n::: {.cell-output-display}\n![Faceted Log-transformed length and weight relationship with linear regression line](index_files/figure-html/fig-scatter6-1.png){#fig-scatter6 fig-pos='H' width=480}\n:::\n:::\n\n\n\n### Linegraph\nThe next basic graph of **ggplot2** is the linegraph. Line graphs is similar to drawing points, except that it connects the points with line. often times you don't show the points. Let's illustrate how to create linegraphs using catch data in the region. We first load the dataset in the session\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlanding.countries = read_csv(\"../data/tidy/landings_wio_country.csv\", skip = 4)\n```\n:::\n\n\nThe `landing.countries` dataset contain 660 records of landed fisheries catch information recorded between 1950 and 2015 from Somalia, Kenya, Mozambique, South Africa, Madagascar, Mauritius, Seychelles, Mayotte, Tanzania and Zanzibar. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlanding.countries %>% \n  FSA::headtail() |> \n  flextable::flextable() |> \n  flextable::autofit()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-08facf78{}.cl-08f42e52{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-08f694e4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-08f694f8{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-08f6a434{width:1.126in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a435{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a43e{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a43f{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a448{width:1.126in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a449{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a44a{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a452{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a453{width:1.126in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a454{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a45c{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-08f6a45d{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-08facf78'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-08f6a434\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">name</span></p></th><th class=\"cl-08f6a435\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">year</span></p></th><th class=\"cl-08f6a43e\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">catch</span></p></th><th class=\"cl-08f6a43f\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">epoch</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a448\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Kenya</span></p></td><td class=\"cl-08f6a449\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,950</span></p></td><td class=\"cl-08f6a44a\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">19,154</span></p></td><td class=\"cl-08f6a452\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a448\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Kenya</span></p></td><td class=\"cl-08f6a449\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,951</span></p></td><td class=\"cl-08f6a44a\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">21,318</span></p></td><td class=\"cl-08f6a452\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a448\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Kenya</span></p></td><td class=\"cl-08f6a449\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,952</span></p></td><td class=\"cl-08f6a44a\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">19,126</span></p></td><td class=\"cl-08f6a452\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a448\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Madagascar</span></p></td><td class=\"cl-08f6a449\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,013</span></p></td><td class=\"cl-08f6a44a\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">266,953</span></p></td><td class=\"cl-08f6a452\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,010</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a448\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Madagascar</span></p></td><td class=\"cl-08f6a449\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,014</span></p></td><td class=\"cl-08f6a44a\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">138,478</span></p></td><td class=\"cl-08f6a452\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,010</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-08f6a453\"><p class=\"cl-08f694e4\"><span class=\"cl-08f42e52\">Madagascar</span></p></td><td class=\"cl-08f6a454\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,015</span></p></td><td class=\"cl-08f6a45c\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">145,629</span></p></td><td class=\"cl-08f6a45d\"><p class=\"cl-08f694f8\"><span class=\"cl-08f42e52\">2,010</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\nLinegraphs are used to show time series data. Its inappropriate to use the linegraphs for data that has no clear sequential ordering and should be continuous and not discrete data type. The internal structure of the catch dataset we just loaded indicate that with exception of country's name, year, catch and epoch are numeric values. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlanding.countries %>% \n  glimpse() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 660\nColumns: 4\n$ name  <chr> \"Kenya\", \"Kenya\", \"Kenya\", \"Kenya\", \"Kenya\", \"Kenya\", \"Kenya\", \"…\n$ year  <dbl> 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960…\n$ catch <dbl> 19154, 21318, 19126, 20989, 17541, 19223, 23297, 28122, 28819, 2…\n$ epoch <dbl> 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960…\n```\n\n\n:::\n:::\n\n\n\nLet's us plot the annual landings of fish over the period with ggplot. Like the scatterplot we made earlier, where supply the data frame in `data` argument and specified the `aes`thetic mapping  with `x` and `y` coordinates, but instead of using `geom_point()`, we use the `geom_line()`.  The code to make the line graph of annual landing in the WIO region shown in @fig-line1 is written as;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = landing.countries,\n       aes(x = year, y = catch)) +\n  geom_line()+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Annual alnding in the WIO region](index_files/figure-html/fig-line1-1.png){#fig-line1 fig-pos='H' width=480}\n:::\n:::\n\n\nAlthough we added a `geom_line`, but we notice that @fig-line1 display a plot which we did not expect. The problem is that line for the ten countries are all lumped together and result in the chaotic situation. For illustration purpose, I will use the catch data from Mauritius. Let's filter Mauritius' catch information from the `landing.countries` dataset and display its rows and variables;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmauritius.landings = landing.countries %>% \n  filter(name == \"Mauritius\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmauritius.landings %>% \n  FSA::headtail() |> \n  flextable::flextable() |> \n  flextable::autofit()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-092c4b84{}.cl-0924d9b2{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-09280a2e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-09280a38{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0928187a{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281884{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281885{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281886{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281887{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0928188e{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0928188f{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281890{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281898{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-09281899{width:0.668in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-092818a2{width:0.837in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-092818a3{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-092c4b84'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-0928187a\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">name</span></p></th><th class=\"cl-09281884\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">year</span></p></th><th class=\"cl-09281885\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">catch</span></p></th><th class=\"cl-09281886\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">epoch</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281887\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-0928188e\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,950</span></p></td><td class=\"cl-0928188f\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">183,082</span></p></td><td class=\"cl-09281890\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281887\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-0928188e\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,951</span></p></td><td class=\"cl-0928188f\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">216,151</span></p></td><td class=\"cl-09281890\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281887\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-0928188e\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,952</span></p></td><td class=\"cl-0928188f\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">181,822</span></p></td><td class=\"cl-09281890\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">1,960</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281887\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-0928188e\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,013</span></p></td><td class=\"cl-0928188f\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">15,797</span></p></td><td class=\"cl-09281890\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,010</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281887\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-0928188e\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,014</span></p></td><td class=\"cl-0928188f\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">13,879</span></p></td><td class=\"cl-09281890\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,010</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-09281898\"><p class=\"cl-09280a2e\"><span class=\"cl-0924d9b2\">Mauritius</span></p></td><td class=\"cl-09281899\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,015</span></p></td><td class=\"cl-092818a2\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">16,373</span></p></td><td class=\"cl-092818a3\"><p class=\"cl-09280a38\"><span class=\"cl-0924d9b2\">2,010</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\nThere are only 66 rows in Mauritius which are equivalent to 66 records each per year from 1950 to 2015. Let's use the `mauritius.landings` dataset to plot \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mauritius.landings,\n       aes(x = year, y = catch)) +\n  geom_line()+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Mauritius' annual landing](index_files/figure-html/fig-line2-1.png){#fig-line2 fig-pos='H' width=480}\n:::\n:::\n\n\nOften times you find that linegraphs has points. You can also do that in ggplot environment by adding a `geom_point` layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mauritius.landings,\n       aes(x = year, y = catch)) +\n  geom_line()+\n  geom_point()+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Mauritius' annual landing](index_files/figure-html/fig-line3-1.png){#fig-line3 fig-pos='H' width=480}\n:::\n:::\n\n\nYou can also customize the appearance of the line and point by parsing the color argument in the geom_point and geom_line layers\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mauritius.landings,\n       aes(x = year, y = catch)) +\n  geom_line(color = \"black\")+\n  geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Mauritius' annual landing](index_files/figure-html/fig-line4-1.png){#fig-line4 fig-pos='H' width=480}\n:::\n:::\n\n\nThe problem we faced in @fig-line1 is that catch data for all ten countries were pooled together, and the plot was not informative. But what is we want to compare the trend of catch among the countries. That is achieved by simply distinguishing the color layer for each country. That is done by adding an argument `color=name` in `aes` function as the code below highlight\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = landing.countries,\n       aes(x = year, y = catch, color = name)) +\n  geom_line()+\n  # geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Annual landing by countries in the WIO region](index_files/figure-html/fig-line5-1.png){#fig-line5 fig-pos='H' width=480}\n:::\n:::\n\n\nThe landings from South Africa is far higher than the rest of the WIO's countries, which overshadow the appearance of other countries (@fig-line5). There several approaches to resolve this issues where some countries have low catch values while others have relatively very high catches. For our case, we have decided to remove South Africa from the plot. We can do that by negating the selection with `filter` function from **dplyr** package. By parsing `filter(!name == \"South Africa\")`, note the exclamation mark before `name` tell to reverse selection and therefore select all countries except South Africa.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nother.countries = landing.countries %>% \n  filter(!name == \"South Africa\")\n```\n:::\n\n\nWe then plot and parse the argument `data = other.countries` instead of `data = landing.countries` to make @fig-line7.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = other.countries,\n       aes(x = year, y = catch, color = name)) +\n  geom_line()+\n  # geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Annual landing by countries in the WIO region with South Africa ommited](index_files/figure-html/fig-line7-1.png){#fig-line7 fig-pos='H' width=480}\n:::\n:::\n\n\n\nWe notice that Tanzania and Zanzibar are presented as separate entity. Although the two states report to the FAO separate, but would be interested to know the landing of the combined Tanzania and Zanzibar catches. But before we combine these two states, lets see how their catches vary over the period. First we need to select only records for Tanzania and Zanzibar using a `filter` function as illustrated below;\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntanzania.zanzibar = landing.countries %>% \n  filter(name %in% c(\"Tanzania\", \"Zanzibar\")) \n```\n:::\n\n\n\nOnce we have created a `tanzania.zanzibar` object, we can use it to make plots that compare catch trend of Tanzania and Zanzibar over the last 66 years. The code in this chunk is used to make @fig-line8\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = tanzania.zanzibar,\n       aes(x = year, y = catch, color = name)) +\n  geom_line()+\n  # geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Annual landing for mainland Tanzania and Zanzibar](index_files/figure-html/fig-line8-1.png){#fig-line8 fig-pos='H' width=480}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlanding.countries %>% \n  mutate(name = str_replace(string = name, \n                            pattern = \"Zanzibar\", \n                            replacement = \"Tanzania\")) %>% \n  filter(!name == \"South Africa\") %>% \n  group_by(name, year) %>% \n  summarise(catch_new = sum(catch, na.rm = TRUE)) %>% \n  ggplot(\n       aes(x = year, y = catch_new, color = name)) +\n  geom_line()+\n  # geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Annual landing for WIO where mainland Tanzania and Zanzibar are combined](index_files/figure-html/fig-line9-1.png){#fig-line9 fig-pos='H' width=480}\n:::\n:::\n\n\n### Area plot\n\nThe `geom_area` method is used to create an area plot. It can be used as a component in the **ggplot** method. The `alpha` parameter in the `geom_area` method is used to depict the opacity of a genome, the value ranges from zero to one integral values. In case, we choose a lower value, this means that a more transparent color version will be chosen to depict the plot and its smoothness. We have used the value for the alpha parameter to be one by two means it is somewhat translucent in nature. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = tanzania.zanzibar,\n       aes(x = year, y = catch, fill = name)) +\n  geom_area(alpha = 0.6, position=\"identity\")+\n  # geom_point(color = \"red\")+\n  labs(x = \"Year\", y = \"Annual catch (MT)\")\n```\n\n::: {.cell-output-display}\n![Area plot showing Annual landing for mainland Tanzania and Zanzibar](index_files/figure-html/fig-line-area-1.png){#fig-line-area fig-pos='H' width=480}\n:::\n:::\n\n\n\n### Histogram\nA histogram is a plot that can be used to examine the shape and spread of continuous data. It looks very similar to a bar graph and organized in intervals or classes. It divides the range of the data into `bin` equal intervals (also called bins or classes), count the number of observations in each bin, and display the frequency distribution of observations as a bar plot. Such histogram plots provide valuable information on the characteristics of the data, such as the `central tendency`, the `dispersion` and the general `shape` of the distribution. With `lfq4` dataset, we can plot the histogram of `tl_mm`. Since histogram works for single variable that contains quantitative values, you can not bother looking for relationship as we have seen in previous plots, but histogram offers an opportunity to answer question like\n\n1. What are the smallest and largest values of tl_mm?\n2. What is the center value?\n3 How does these values spread out?\n\nWe can make a histogram shown in @fig-hist by simply setting `aes(x = tl_mm)` and add `geom_histogram()`. Within the `geom_histogram()`, we simply specify the number of bins `bins = 30`, fill color for the colum and also the color separating each columns of the histogram with `col == \"red\"` and `fill = \"red\"`. However, a word of caution regarding histograms—bin size matters. The reproducible code to plot @fig-hist is written as;\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = tl_mm)) +\n  geom_histogram(bins = 30, fill = \"red\", color = \"red\", alpha = 0.4)+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Histogram of total length](index_files/figure-html/fig-hist-1.png){#fig-hist fig-pos='H' width=480}\n:::\n:::\n\nThe resulting histogram gives us an idea of the range of total length of fish we can expect from the sample. You may be interested to compare histogram of the data values sampled from two or sites. For example, in our case, we are interested to compare the distribution of total length using samples collected from Mombasa and Voi sites. We simply add the `fill = site` argument in the `aes` function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = tl_mm, fill = site)) +\n  geom_histogram(bins = 50, alpha = 0.6)+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Histogram of total length by sites](index_files/figure-html/fig-hist2-1.png){#fig-hist2 fig-pos='H' width=480}\n:::\n:::\n\n\n\nThe histogram of Mombasa and Voi is plotted as shown in @fig-hist2, however, despite the transparency level of the bins is set to 0.6 (alpha = .6), yet the bins from Mombasa are masked with bins from Voi. The voi bins are plotted over the Mombasa ones and prevent us to visualize the underneath Mombasa bins. To correct for this issue, we need to parse `position = \"identity\"`in the `geom_bin`, which create an different color where the Mombasa and Voi bins are intersected.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = tl_mm, fill = site)) +\n  geom_histogram(bins = 50, alpha = 0.6, position = \"identity\")+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Histogram of total length by sites](index_files/figure-html/fig-hist3-1.png){#fig-hist3 fig-pos='H' width=480}\n:::\n:::\n\n\n\n\n### Frequency polygons\nIt is often useful to visualise the distribution of a numerical variable. Comparing the distributions of different groups can lead to important insights. Visualising distributions is also essential when checking assumptions used for various statistical tests (sometimes called initial data analysis). In this section we will illustrate how this can be done using the diamonds data from the **ggplot2** package, which you started to explore in Chapter 2.\n\n\nAn advantage with frequency polygons is that they can be used to compare groups, e.g. diamonds with different cuts, without facetting:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = tl_mm, color = site)) +\n  geom_freqpoly(alpha = 0.6, position = \"identity\")+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Frequency polygon of total length by sites](index_files/figure-html/fig-freqpoly-1.png){#fig-freqpoly fig-pos='H' width=480}\n:::\n:::\n\n\nIt is clear from this figure that the total length of fish from Voi is larger in size than those from Mombasa. The polygons have roughly the same shape, except the shape of Mombasa a long right tail indicating the presence of outlier points.\n\n\n### Density plots\nIn some cases, we are more interested in the shape of the distribution than in the actual counts in the different bins. Density plots are similar to frequency polygons but show an estimate of the density function of the underlying random variable. These estimates are smooth curves that are scaled so that the area below them is 1 (i.e. scaled to be proper density functions):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|\n\n  ggplot(data = lfq4,\n       aes(x = tl_mm, fill = site)) +\n  geom_density(alpha = 0.4, position = \"identity\")+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Density plot of total length by sites](index_files/figure-html/fig-density-1.png){#fig-density fig-pos='H' width=480}\n:::\n:::\n\n\nFrom @fig-density, it's clear that small size fish tend to have better total length, which wasn’t obvious from the frequency polygons. However, the plot does not provide any information about how common different total length are.\n\n\n### Boxplot\nThe boxplot is a standardized way of displaying the distribution of data based on the five number summary: minimum, first quantile, median, third quantile, and maximum. Boxplots are useful for detecting outliers and for comparing distributions. These five number summary also called the 25^th^ percentile, median, and 75^th^ percentile of the quantitative data. The whisker (vertical lines) capture roungly 99% of a distribution, and observation outside this range are plotted as points representing outliers as shown in @fig-boxplot1.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Conceputal boxplot diagram](boxplot-01.png){#fig-boxplot1 fig-pos='H' width=412}\n:::\n:::\n\n\n\nBoxplots is one of statistical plot that present continuous variable and in **ggplot** a `geom_boxplot()` function is dedicated for that. The aes function always have at least two arguments. The first argument should be a categrial variable and the second one is numeric. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = site, y = tl_mm)) +\n  geom_boxplot(alpha = 0.6, position = \"identity\")+\n  labs(x = \"Sites\", y = \"Total length (mm)\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Boxplot of total length by sites](index_files/figure-html/fig-boxplot2-1.png){#fig-boxplot2 fig-pos='H' width=288}\n:::\n:::\n\n\nthe `geom_boxplot()` has `outlier_` arguments that allows to highlight and modify the color, shape, size, alpha ... etc of outliers ---extreme observation. For instance, you can highlight the outlier with;\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = site, y = tl_mm, fill = site)) +\n  geom_boxplot(alpha = 0.6, position = \"identity\", outlier.colour = \"red\", outlier.color = )+\n  labs(x = \"Sites\", y = \"Total length (mm)\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Boxplot of total length by sites](index_files/figure-html/fig-boxplot3-1.png){#fig-boxplot3 fig-pos='H' width=480}\n:::\n:::\n\n\nWe can also map the fill and color to variable in to distinguish boxplot. for example, we can specify the `fill = site` argument in the `aes()` to fill the boxplot based on site.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = site, y = tl_mm, fill = site)) +\n  geom_boxplot(alpha = 0.6, position = \"identity\", outlier.colour = \"red\", outlier.color = )+\n  labs(x = \"Sites\", y = \"Total length (mm)\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Boxplot of total length and color to distinguish sites](index_files/figure-html/fig-boxplot4-1.png){#fig-boxplot4 fig-pos='H' width=480}\n:::\n:::\n\n\n\nWe can add the points on top of the boxplot with the `geom_jitter()`. It also allows for specifying other arguments like  colors and width of the points.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = site, y = tl_mm, fill = site)) +\n  geom_boxplot(alpha = 0.6, position = \"identity\", \n               outlier.colour = \"red\", outlier.color = )+\n  geom_jitter(width = .1, height = .5, alpha = 0.1)+\n  labs(x = \"Sites\", y = \"Total length (mm)\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Boxplot with points of total length by sites](index_files/figure-html/fig-boxplot5-1.png){#fig-boxplot5 fig-pos='H' width=480}\n:::\n:::\n\n\n\n### Violin plots\nInstead of using a boxplot, we can use a violin plot. Each group is represented by a “violin”, given by a rotated and duplicated density plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = lfq4,\n       aes(x = site, y = tl_mm, fill = site)) +\n  geom_violin(alpha = 0.6, position = \"identity\")+\n  labs(x = \"Sites\", y = \"Total length (mm)\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Violin of total length by sites](index_files/figure-html/fig-violin-1.png){#fig-violin fig-pos='H' width=480}\n:::\n:::\n\n\n\n### Barplot\nBar graphs are perhaps the widely used plot. They are typically used to display count values on the y-axis for different groups on the x-axis. There is an important distinction you should be aware of when making bar graphs. The height of a bar in barplot may represent either the counts or percentage of elements in the dataset. Let's begin with the former---count. We use the `shrimps_cleaned.csv` dataset, which contains weight and length of four shrimp species. To access the variable and values of this file we need to load the file using a `read_csv` function as the code in the chunk below highlight;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp = read_csv(\"../data/tidy/shrimps_cleaned.csv\")\n```\n:::\n\n\nThe sample dataset of shrimp is shown in @tbl-shrimp. It contain six variables year, season, tide, species, weight (total_wt_kg) and length (tl_mm).\n\n\n::: {#tbl-shrimp .cell tbl-cap='Shrimp dataset'}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"zrzlypusvd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zrzlypusvd table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zrzlypusvd thead, #zrzlypusvd tbody, #zrzlypusvd tfoot, #zrzlypusvd tr, #zrzlypusvd td, #zrzlypusvd th {\n  border-style: none;\n}\n\n#zrzlypusvd p {\n  margin: 0;\n  padding: 0;\n}\n\n#zrzlypusvd .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zrzlypusvd .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zrzlypusvd .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zrzlypusvd .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zrzlypusvd .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zrzlypusvd .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zrzlypusvd .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zrzlypusvd .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zrzlypusvd .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zrzlypusvd .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zrzlypusvd .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zrzlypusvd .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zrzlypusvd .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zrzlypusvd .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zrzlypusvd .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zrzlypusvd .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zrzlypusvd .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zrzlypusvd .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zrzlypusvd .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zrzlypusvd .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zrzlypusvd .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zrzlypusvd .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zrzlypusvd .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zrzlypusvd .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zrzlypusvd .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zrzlypusvd .gt_left {\n  text-align: left;\n}\n\n#zrzlypusvd .gt_center {\n  text-align: center;\n}\n\n#zrzlypusvd .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zrzlypusvd .gt_font_normal {\n  font-weight: normal;\n}\n\n#zrzlypusvd .gt_font_bold {\n  font-weight: bold;\n}\n\n#zrzlypusvd .gt_font_italic {\n  font-style: italic;\n}\n\n#zrzlypusvd .gt_super {\n  font-size: 65%;\n}\n\n#zrzlypusvd .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zrzlypusvd .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zrzlypusvd .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zrzlypusvd .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zrzlypusvd .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zrzlypusvd .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zrzlypusvd .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"year\">year</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"season\">season</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"tide\">tide</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"species\">species</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"total_wt_kg\">total_wt_kg</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"tl_mm\">tl_mm</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"season\" class=\"gt_row gt_left\">WET</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STF</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Metapenaeus monoceros</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">2.0</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">21</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"season\" class=\"gt_row gt_left\">WET</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STF</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Metapenaeus monoceros</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">2.0</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">20</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"season\" class=\"gt_row gt_left\">WET</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STF</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Metapenaeus monoceros</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">2.0</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">19</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2012</td>\n<td headers=\"season\" class=\"gt_row gt_left\">DRY</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STN</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Penaeus monodon</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">1.7</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">12</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2012</td>\n<td headers=\"season\" class=\"gt_row gt_left\">DRY</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STN</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Fenneropenaeus indicus</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">1.7</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">14</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2012</td>\n<td headers=\"season\" class=\"gt_row gt_left\">DRY</td>\n<td headers=\"tide\" class=\"gt_row gt_left\">STN</td>\n<td headers=\"species\" class=\"gt_row gt_left\">Penaeus monodon</td>\n<td headers=\"total_wt_kg\" class=\"gt_row gt_right\">1.7</td>\n<td headers=\"tl_mm\" class=\"gt_row gt_right\">11</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nWe realize that the scientific names are too long and may not fit into the plotting area. Therefore, we use a `case_when` function from dplyr package to change species name and assign it as a new variable called `species.short` \n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp = shrimp %>% \n  mutate(species.short = case_when(\n    species == \"Metapenaeus monoceros\"~ \"M.monoceros\",\n    species == \"Penaeus monodon\"~ \"P.monodon\",\n    species == \"Fenneropenaeus indicus\"~ \"F.indicus\",\n    species == \"Penaeus semisulcatus\"~ \"P.semisulcatus\")\n    ) %>% \n  relocate(species.short, .after = species)\n```\n:::\n\n\n#### Barplot for count\nTo make the bar graph that show the number of shrimp per species over the sampling period you you simply specify the the variable `species` in the `x` coordinates in the `aes`thetic and add the `geom_bar()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short))+\n  geom_bar()+\n  labs(x = \"Species\", y= \"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species](index_files/figure-html/fig-bar-1.png){#fig-bar fig-pos='H' width=480}\n:::\n:::\n\n\nThen to stack the bar based on the sampling season, we add the argument `fill = season` in `aes()` part\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar()+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season](index_files/figure-html/fig-bar1-1.png){#fig-bar1 fig-pos='H' width=480}\n:::\n:::\n\n\n\n\nYou can flip the order of bar with `position = position_stack(reverse = TRUE)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar(position = position_stack(reverse = TRUE))+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season](index_files/figure-html/fig-bar2-1.png){#fig-bar2 fig-pos='H' width=480}\n:::\n:::\n\n\n\nInstead of stacking, you can dodge the bar with `position = position_dodge()` argument\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar(position = position_dodge())+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season with span](index_files/figure-html/fig-bar3-1.png){#fig-bar3 fig-pos='H' width=480}\n:::\n:::\n\n\nWe notice that the species that only appear one season, the count for that species is span across and make the bar wideer than those species occur in both seasons. We can fix that by parsing `position = position_dodge(preserve = \"single\")` in the `geom_bar` function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar(position = position_dodge(preserve = \"single\"))+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season without span](index_files/figure-html/fig-bar4-1.png){#fig-bar4 fig-pos='H' width=480}\n:::\n:::\n\n\n\nTo add a black stroke color of the bar, add the argument `col = \"black\"` inside the `geom_bar()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar(position = position_dodge(preserve = \"single\"), color = \"black\")+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season without span with black bar color](index_files/figure-html/fig-bar5-1.png){#fig-bar5 fig-pos='H' width=480}\n:::\n:::\n\nAnd to specify the width of the bar you specify a value in `width=.75` argument in `geom_bar()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp, aes(x = species.short, fill = season))+\n  geom_bar(position = position_dodge(preserve = \"single\"), color = \"black\", width = .75)+\n  labs(x = \"Species\", y =\"Frequency\")\n```\n\n::: {.cell-output-display}\n![Frequency of shrimp species by season without span with black bar color](index_files/figure-html/fig-bar6-1.png){#fig-bar6 fig-pos='H' width=480}\n:::\n:::\n\n\n\n#### Barplot for values\nWe have seen how to make barplot that show the count with `geom_bar()`. You can also use the barplot to show the values with the `geom_col()` function and specify what variables you want on the `x` and `y` axis. For instance, we want to show percentage of shrimp species by season. Because the `geom_col()` requires summarized statistics, we need to compute the percentage for each season as the chunk below highlight. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp.pct = shrimp %>% \n  group_by(species.short, season) %>% \n  summarise(n = n()) %>% \n  mutate(pct = n/sum(n), \n         pct = (pct * 100) %>% round(2))\n\nshrimp.pct\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n# Groups:   species.short [4]\n  species.short  season     n   pct\n  <chr>          <chr>  <int> <dbl>\n1 F.indicus      DRY      404 100  \n2 M.monoceros    DRY      539  86.9\n3 M.monoceros    WET       81  13.1\n4 P.monodon      DRY      738  52.4\n5 P.monodon      WET      671  47.6\n6 P.semisulcatus DRY      227 100  \n```\n\n\n:::\n:::\n\n\n\nOnce we have computed the statistics, we can use them to make barplot. Note that unlike the `geom_bar()`, which need only the `x` variable, `geom_col()` requires `x` and `y` variables specified. For illustration, we specified the `x = species`, and `y = pct` in the `aes()` to make a barplot that show the percentage of shrimp by season (@fig-bar7). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shrimp.pct, aes(x = species.short, y = pct, fill = season))+\n  geom_col(position = position_dodge(preserve = \"single\"), color = \"black\", width = .75)+\n  labs(x = \"Species\", y =\"Percentage\")\n```\n\n::: {.cell-output-display}\n![Percentage of shrimp species by season without span with black bar color](index_files/figure-html/fig-bar7-1.png){#fig-bar7 fig-pos='H' width=480}\n:::\n:::\n\n\n### Pie and donut charts\n\nA pie chart is a disk divided into pie-shaped pieces proportional to the relative frequencies of the classes. To obtain angle for any class, we multiply the relative frequencies by 360 degree, which corresponds to the complete circle. Either variables or attributes can be portrayed in this manner, but a pie chart is especially useful for attributes. A pie diagram for contribution of different fish groups/species to the total fish landings at a landing site of a river is shown in @fig-pie.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp %>% \n  group_by(species) %>% \n  summarise(n = n()) %>% \n  mutate(pct = round(n/sum(n)*100), 2) %>% \n  mutate(species = str_replace(string = species, pattern = \" \", replacement = \"\\n\")) %>% \n  mutate(label = paste0(\"(\",pct,\"%\",\")\")) %>% \n  ggpubr::ggpie(x = \"pct\", label = \"label\", fill = \"species\", lab.pos = \"in\", palette = \"jama\", color = \"ivory\", ggtheme = theme_void(), )\n```\n\n::: {.cell-output-display}\n![Percentage composition of prawn species](index_files/figure-html/fig-pie-1.png){#fig-pie fig-pos='H' width=336}\n:::\n:::\n\n\nAn extended pie chart is donut shown in @fig-donut\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp %>% \n  group_by(species) %>% \n  summarise(n = n()) %>% \n  mutate(pct = round(n/sum(n)*100), 2) %>% \n  mutate(species = str_replace(string = species, pattern = \" \", replacement = \"\\n\")) %>% \n  mutate(label = paste0(\"(\",pct,\"%\",\")\")) %>% \n  ggpubr::ggdonutchart(x = \"pct\", label = \"label\", fill = \"species\", lab.pos = \"in\", palette = \"jama\", color = \"ivory\", ggtheme = theme_void())\n```\n\n::: {.cell-output-display}\n![Percentage composition of prawn species](index_files/figure-html/fig-donut-1.png){#fig-donut fig-pos='H' width=336}\n:::\n:::\n\n\n### Bar with polar tranformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp %>% \n  group_by(species.short) %>% \n  count() %>% \n  arrange(-n) %>% \n  ggplot(aes(x = reorder(species.short,n), y = n, \n             fill = species.short), stat = \"identity\")+\n  geom_col() +\n  coord_polar(theta = \"y\")+\n  theme_bw() +\n  theme(axis.title = element_blank(), legend.position = \"right\", axis.text.y = element_blank(), axis.ticks = element_blank())+\n  scale_fill_brewer(palette = \"Set2\", name = \"Species\")\n```\n\n::: {.cell-output-display}\n![Barplot with polar transformation](index_files/figure-html/fig-polar-1.png){#fig-polar fig-pos='H' width=384}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshrimp %>% \n  ggplot() +\n  geom_bar(aes(x = tide, fill = species.short),\n           color = \"ivory\") +\n  labs(x = \"Tide\", y = \"Count\") +\n  coord_polar()+\n  theme_bw() +\n  theme(axis.title = element_blank(), \n        legend.position = \"right\")+\n  scale_fill_brewer(palette = \"Set2\", name = \"Species\")\n```\n\n::: {.cell-output-display}\n![Stacked barplot with polar transformation](index_files/figure-html/fig-polar2-1.png){#fig-polar2 fig-pos='H' width=384}\n:::\n:::\n\n\n\n### Ridge plot\n\nAlthough the **ggridges** package provides `geom_ridgeline` and `geom_density_ridges`, we focus on the latter because it has ability to estimates data densities and then draws those using ridgelines.The geom `geom_density_ridges` calculates density estimates from the provided data and then plots those, using the ridgeline visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlfq4 %>% \n  mutate(months = lubridate::month(date, label = TRUE)) %>%\n  ggplot()+\n  ggridges::geom_density_ridges(aes(x = tl_mm, y = months, fill = site), alpha = .7)+\n  scale_fill_brewer(palette = \"Set2\", name = \"Sampling\\nsite\")+\n  theme_minimal()+\n  theme(legend.position = c(.85,.2), legend.background = element_rect())+\n  labs(y = \"Months\", x = \"Total length (mm.)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-56-1.png){fig-pos='H' width=480}\n:::\n:::\n\n\n\n## Combining multiple plots\nWhen exploring data with many variables, you’ll often want to make the same kind of plot (e.g. a violin plot) for several variables. It will frequently make sense to place these side-by-side in the same plot window. The **patchwork** package extends **ggplot2** by letting you do just that. Let’s install it:\n\n```r\ninstall.packages(\"patchwork\")\n```\n\nThen load a package in the workspace\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(patchwork)\n```\n:::\n\n\n\nTo use **patchwork** [@patchwork], save each plot as a plot object :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.tl = ggplot(data = lfq4,\n       aes(x = tl_mm, fill = site)) +\n  geom_density(alpha = 0.4, position = \"identity\")+\n  labs(x = \"Total length (mm)\", y = \"Frequency\")+\n  theme_minimal()\n\n plot.wt = ggplot(data = lfq4,\n       aes(x = wt_gm, fill = site)) +\n  geom_density(alpha = 0.4, position = \"identity\")+\n  labs(x = \"Weight (gram)\", y = \"Frequency\")+\n  theme_minimal()+\n   theme(legend.position = \"none\")\n```\n:::\n\n\nthen add them together\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.tl + plot.wt\n```\n\n::: {.cell-output-display}\n![Density plot by sites for total length (left panel) and weight (right panel)](index_files/figure-html/fig-patchwork-1.png){#fig-patchwork fig-pos='H' width=672}\n:::\n:::\n\n`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.tl / plot.wt\n```\n\n::: {.cell-output-display}\n![Density plot by sites for total length (top panel) and weight (bottom panel)](index_files/figure-html/fig-patchwork1-1.png){#fig-patchwork1 fig-pos='H' width=480}\n:::\n:::\n\n\nWe need first to extract monsoon seasons from the dataset. We know from literature that the coasal waters of East Africa is affected by monsoon season, which is influenced trade winds, which is broadly categorized as;\n\n+ Northeast monsoon season --- November through March\n+ Southeast monsoon season --- May to september\n+ Intermonsoon season --- April and October\n\nWe can use the month information to break our dataset into three monsoon seasons as;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlfq4.season = lfq4 %>% \n  mutate(month = lubridate::month(date),\n         season = case_when(month > 10 | month < 4 ~ \"NE\",\n                            month >=5 & month < 10 ~ \"SE\",\n                            month == 4 | month == 10 ~ \"INT\")) %>% select(-month)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.int =lfq4.season %>% \n  filter(site == \"Voi\" & season == \"INT\") %>% \n  ggplot(aes(x = tl_mm, y = wt_gm))+\n  geom_point(alpha = .2)+\n  theme_bw()+\n  scale_x_continuous(name = \"Total length (mm)\")+\n  scale_y_continuous(name = \"Weight (gram)\")+\n  annotate(geom = \"label\",x = 120, y = 80, label = \"Northeast\\nSeason\")\n\nplot.ne = lfq4.season %>% \n  filter(site == \"Voi\" & season == \"NE\") %>% \n  ggplot(aes(x = tl_mm, y = wt_gm))+\n  geom_point(alpha = .2)+\n  theme_bw()+\n  scale_x_continuous(name = \"Total length (mm)\")+\n  scale_y_continuous(name = \"Weight (gram)\")+\n  annotate(geom = \"label\",x = 140, y = 80, label = \"Southeast\\nSeason\")\n\nplot.se = lfq4.season %>% \n  filter(site == \"Voi\" & season == \"SE\") %>% \n  ggplot(aes(x = tl_mm, y = wt_gm))+\n  geom_point(alpha = .2)+\n  theme_bw()+\n  scale_x_continuous(name = \"Total length (mm)\")+\n  scale_y_continuous(name = \"Weight (gram)\")+\n  annotate(geom = \"label\",x = 120, y = 80, label = \"Inter\\n Monsoon\")\n\nplot.all = lfq4.season %>% \n  filter(site == \"Voi\") %>% \n  ggplot(aes(x = tl_mm, y = wt_gm, color = season))+\n  geom_point(alpha = .2)+\n  theme_bw()+\n  scale_x_continuous(name = \"Total length (mm)\")+\n  scale_y_continuous(name = \"Weight (gram)\")+\n  theme(legend.position = c(.2,.8))\n```\n:::\n\n\nYuo may plot One row with three plots and one row with a single plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(plot.ne + plot.se + plot.int)/\n  plot.all\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-63-1.png){width=480}\n:::\n:::\n\n\nOr one column with three plots and one column with a single plot\n`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.all | (plot.ne / plot.se / plot.int)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-64-1.png){width=480}\n:::\n:::\n\n\n## Labelling outliers\nInteractive plots are great when exploring a dataset but are not always possible to use in other contexts, e.g. for printed reports and some presentations. In these other cases, we can instead annotate the plot with notes about outliers. One way to do this is to use a geom called geom_text.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlfq4.season %>% \n  filter(!site == \"Voi\") %>% \n  ggplot(aes(x = season, y = wt_gm, fill = season))+\n  geom_boxplot(alpha = .4, width = .29)+\n  ggrepel::geom_text_repel(aes(label = if_else( wt_gm > 175, site, \"\"))) +\n  theme_bw()+\n  scale_x_discrete(name = \"Monsoon season\")+\n  scale_y_continuous(name = \"Weight (gram)\")+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-65-1.png){width=384}\n:::\n:::\n\n\n\n\n\n\n## Add-on packages\nThe R community has developed packages that extend the capability of **ggplot2**. Some of the packages include:\n\n+ **metR**: Provide addition tools for plotting filled contour, and label contour lines\n+ **ggrepel**: Contains tools for automatically position non-overlapping text labels\n+ **ggspatial**: Spatial Data Framework for **ggplot2**\n+ **RcolorBrewer**: Contains color palettes for continuous and discrete plots\n+ **cowplot**: Contains addition themes and tools to combine **ggplot2** plots in one panel\n+ **egg**: Provide tools for plot aligning and symmetrised **ggplot2** plots\n+ **oce**: Provide color pallete for visualization of Oceanographic Data \n+ **ggsn**: Provide tools for mapping North symbols and scale bars on maps created with **ggplot2**\n+ **gganimate**: convert static ggplot2 plots to animations\n+ **ggformula**:  adds some additional plot options to **ggplot2**\n+ **sf** : Add capabilities of **ggplot2** to map spatial data such as simple features\n+ **ggthemes**: contains extra themes, scales, and geoms, and functions for and related to ggplot2\n+ **ggridges**: extend the geom_density function by plotiing closed polygons insted of ridgelines\n+ **ggpmisc**\n\n\n\n## References\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}